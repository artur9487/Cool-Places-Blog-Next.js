/** @format */

import Head from 'next/head';
import React, { useEffect } from 'react';
import { Box } from '@mui/system';
import Layout from '../components/Layout';
import { Context } from '../ContextComp';
import { useState, useLayoutEffect, useRef } from 'react';
import { request, gql } from 'graphql-request';
import { useMediaQuery } from '@mui/material';

const MainLayout = (props) => {
	const { result, result2, type, result3 } = props;
	const [loadMore, setLoadMore] = useState(result.length);
	const [data, setData] = useState(result);
	const firstUpdate = useRef(true);
	const maxWidth900 = useMediaQuery('(max-width:900px)');
	const maxWidth600 = useMediaQuery('(max-width:600px)');

	useLayoutEffect(() => {
		if (firstUpdate.current) {
			if (type === 'all') {
				const url =
					'https://api-eu-central-1.hygraph.com/v2/cl10szcbx0rd401z04l0ldt9g/master';
				const start = async () => {
					const query = gql`
						query PlaceQuery($loadMore: Int!) {
							placesSConnection(first: $loadMore, orderBy: createdAt_ASC) {
								edges {
									node {
										description
										id
										photo {
											url
										}
										placeName
										category
										createdAt
									}
								}
							}
						}
					`;

					const variables = { loadMore };

					const proResult = await request(url, query, variables);
					const endResult = proResult.placesSConnection.edges;
					setData(endResult);
				};
				start();
			}
		}
	}, [loadMore, type]);

	return (
		<Context.Provider
			value={{
				data,
				result2,
				result3,
				setLoadMore,
				type,
				maxWidth900,
				maxWidth600
			}}>
			<Box sx={{ position: 'relative' }}>
				<Layout>
					<>
						<Head>
							<title>Cool Placs Nextjs blog</title>
							<meta name='description' content='Generated by create next app' />
							<link rel='icon' href='/favicon.ico' />
						</Head>
						{props.children}
					</>
				</Layout>
			</Box>
		</Context.Provider>
	);
};

export default MainLayout;
